drop table IF EXISTS users CASCADE;
drop table IF EXISTS location CASCADE;
drop table IF EXISTS categories CASCADE;
drop table IF EXISTS events CASCADE;
drop table IF EXISTS compilations CASCADE;
drop table IF EXISTS compilations_to_event CASCADE;
drop table If EXISTS requests CASCADE;
drop table if EXISTS comments CASCADE;

create TABLE IF NOT EXISTS users (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY UNIQUE,
    name VARCHAR(250) NOT NULL,
    email VARCHAR(254) UNIQUE NOT NULL
    );

create TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY UNIQUE,
    name VARCHAR(50) UNIQUE NOT NULL
    );

create TABLE IF NOT EXISTS location (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   lat FLOAT,
   lon FLOAT,
   CONSTRAINT pk_location PRIMARY KEY (id)
);

create TABLE IF NOT EXISTS events (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY UNIQUE,
    annotation VARCHAR(2000) NOT NULL,
    category_id BIGINT NOT NULL,
    confirmed_Requests BIGINT,
    create_date TIMESTAMP WITHOUT TIME ZONE,
    description VARCHAR(7000),
    event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    initiator_id BIGINT NOT NULL,
    location_id BIGINT,
    paid BOOLEAN,
    participant_limit INTEGER DEFAULT 0,
    published_date TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN DEFAULT true,
    status VARCHAR(200),
    title VARCHAR(120) NOT NULL,
    CONSTRAINT fk_event_to_user FOREIGN KEY (initiator_id) REFERENCES users (id),
    CONSTRAINT fk_event_to_category FOREIGN KEY (category_id) REFERENCES categories (id),
    CONSTRAINT fk_location FOREIGN KEY (location_id) REFERENCES location (id)
    );

create TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    event_id BIGINT NOT NULL,
    requester_id BIGINT NOT NULL,
    create_date TIMESTAMP WITHOUT TIME ZONE,
    status VARCHAR(20),
    CONSTRAINT fk_requests_to_event FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT fk_requests_to_user FOREIGN KEY (requester_id) REFERENCES users (id)
    );

create TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY UNIQUE,
    pinned BOOLEAN NOT NULL,
    title VARCHAR(50) NOT NULL
    );

create TABLE IF NOT EXISTS compilations_to_event (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    event_id BIGINT NOT NULL,
    compilation_id BIGINT NOT NULL,
    CONSTRAINT fk_event_compilation_to_event FOREIGN KEY (event_id) REFERENCES events (id) ON update CASCADE,
    CONSTRAINT fk_event_compilation_to_compilation FOREIGN KEY (compilation_id) REFERENCES compilations (id) ON update CASCADE
    );

CREATE TABLE comments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   user_id BIGINT NOT NULL,
   comment VARCHAR NOT NULL,
   event_id BIGINT,
   created TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
   updated TIMESTAMP WITHOUT TIME ZONE,
   comments_id BIGINT,
   CONSTRAINT pk_comments PRIMARY KEY (id)
);

ALTER TABLE comments ADD CONSTRAINT FK_COMMENTS_ON_COMMENTS FOREIGN KEY (comments_id) REFERENCES events (id);

ALTER TABLE comments ADD CONSTRAINT FK_COMMENTS_ON_EVENT FOREIGN KEY (event_id) REFERENCES events (id);

ALTER TABLE comments ADD CONSTRAINT FK_COMMENTS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);